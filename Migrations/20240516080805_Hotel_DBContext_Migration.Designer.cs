// <auto-generated />
using System;
using HotelApp2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelApp2.Migrations
{
    [DbContext(typeof(Hotel_DBContext))]
    [Migration("20240516080805_Hotel_DBContext_Migration")]
    partial class Hotel_DBContext_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HCUserRole", b =>
                {
                    b.Property<byte>("IdUser")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IdRole")
                        .HasColumnType("tinyint");

                    b.HasKey("IdUser", "IdRole");

                    b.HasIndex("IdRole");

                    b.ToTable("H_c_UserRoles", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HAttendanceOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EnterDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("ExitDate")
                        .HasColumnType("smalldatetime");

                    b.Property<short>("StaffId")
                        .HasColumnType("smallint");

                    b.Property<byte?>("WorkedHours")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK__H_Attend__3214EC0756AD179C");

                    b.HasIndex("StaffId");

                    b.ToTable("H_AttendanceOperation", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(8, 2)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Comments")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<short>("RoomId")
                        .HasColumnType("smallint");

                    b.Property<byte>("StatusId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK__H_Bookin__3214EC070B9D7CEA");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.HasIndex("StatusId");

                    b.ToTable("H_Booking", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HCleaning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<short>("RoomId")
                        .HasColumnType("smallint");

                    b.Property<byte>("UserId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_H_Cleaning");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("H_Cleaning", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HDAvailabilityStatus", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("StatusName")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id")
                        .HasName("PK__H_d_Avai__3214EC0786D3303E");

                    b.ToTable("H_d_AvailabilityStatuses", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HDBookingStatus", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.HasKey("Id");

                    b.ToTable("H_d_BookingStatuses", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HDCleaningStatus", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id")
                        .HasName("PK__H_d_Clea__3214EC0703801B84");

                    b.ToTable("H_d_CleaningStatuses", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HDCountry", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("H_d_Countries", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HDFeedbackStatus", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("H_d_FeedbackStatuses", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HDLivingStatus", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.HasKey("Id");

                    b.ToTable("H_d_LivingStatuses", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HDPaymentMethod", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id")
                        .HasName("PK__H_d_Paym__3214EC0717517676");

                    b.ToTable("H_d_PaymentMethods", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HDPaymentStatus", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.HasKey("Id")
                        .HasName("PK__H_d_Paym__3214EC07C7AD45A9");

                    b.ToTable("H_d_PaymentStatuses", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HDRoomType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Capacity")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("HDRoomTypes");
                });

            modelBuilder.Entity("HotelApp2.Models.HDSalaryStatus", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.HasKey("Id");

                    b.ToTable("H_d_SalaryStatuses", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HDUserRole", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)");

                    b.HasKey("Id");

                    b.ToTable("H_d_UserRoles", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<byte>("Rate")
                        .HasColumnType("tinyint");

                    b.Property<byte>("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Text")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte?>("UserId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK__H_Feedba__3214EC07719CC297");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("H_Feedback", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HFeedbackAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte>("UserId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK__H_Feedba__3214EC07220CBDA6");

                    b.HasIndex("FeedbackId");

                    b.HasIndex("UserId");

                    b.ToTable("H_FeedbackAnswer", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HGuestBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<byte>("CountryId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("H_GuestBooking", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HGuestLiving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<byte>("CountryId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("H_GuestLiving", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HHotel", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<byte>("CountryId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id")
                        .HasName("PK__H_Hotel__3214EC07D8361C31");

                    b.HasIndex("CountryId");

                    b.HasIndex(new[] { "Phone" }, "UQ__H_Hotel__5C7E359E32AAA165")
                        .IsUnique();

                    b.ToTable("H_Hotel", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HLiving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(8, 2)");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Comments")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<short>("RoomId")
                        .HasColumnType("smallint");

                    b.Property<byte>("StatusId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.HasIndex("StatusId");

                    b.ToTable("H_Living", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(8, 2)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<byte>("MethodId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("StatusId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK__H_Paymen__3214EC07C8F99E29");

                    b.HasIndex("BookingId");

                    b.HasIndex("MethodId");

                    b.HasIndex("StatusId");

                    b.ToTable("H_Payment", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HRoom", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<byte>("AvailabilityStatusId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CleaningStatusId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Etaj")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("HDRoomTypeId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HotelId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NrRooms")
                        .HasColumnType("tinyint");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("TypeId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityStatusId");

                    b.HasIndex("CleaningStatusId");

                    b.HasIndex("HDRoomTypeId");

                    b.HasIndex("HotelId");

                    b.ToTable("HRooms");
                });

            modelBuilder.Entity("HotelApp2.Models.HSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(8, 2)");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<short>("StaffId")
                        .HasColumnType("smallint");

                    b.Property<byte>("StatusId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("StatusId");

                    b.ToTable("H_Salary", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HStaff", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<byte>("CountryId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte>("FunctionId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("date");

                    b.Property<byte>("HotelId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Idnp")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("IDNP");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short>("NrContract")
                        .HasColumnType("smallint")
                        .HasColumnName("Nr.Contract");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id")
                        .HasName("PK__H_Staff__3214EC07309C16B8");

                    b.HasIndex("CountryId");

                    b.HasIndex("FunctionId");

                    b.HasIndex("HotelId");

                    b.HasIndex(new[] { "PassportNumber" }, "UQ__H_Staff__45809E710E3DCE59")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__H_Staff__5C7E359E17539529")
                        .IsUnique();

                    b.HasIndex(new[] { "Idnp" }, "UQ__H_Staff__B87DC94DE5F86280")
                        .IsUnique()
                        .HasFilter("[IDNP] IS NOT NULL");

                    b.ToTable("H_Staff", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HStaffFunction", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("SalaryRate")
                        .HasColumnType("numeric(5, 2)");

                    b.HasKey("Id")
                        .HasName("PK__H_StaffF__3214EC07138C2955");

                    b.HasIndex(new[] { "Name" }, "UQ__H_StaffF__7A54611B6CFEEF65")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("H_StaffFunction", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HUser", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<short>("StaffId")
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("PK__H_UserHo__3214EC0746BFC850");

                    b.HasIndex("StaffId");

                    b.HasIndex(new[] { "Login" }, "UQ__H_UserHo__4156FB312BB59C60")
                        .IsUnique();

                    b.ToTable("H_Users", (string)null);
                });

            modelBuilder.Entity("HotelApp2.Models.HUsersAction", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<byte>("UserId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK__H_Action__3214EC07A009E948");

                    b.HasIndex("UserId");

                    b.ToTable("H_UsersAction", (string)null);
                });

            modelBuilder.Entity("HCUserRole", b =>
                {
                    b.HasOne("HotelApp2.Models.HDUserRole", null)
                        .WithMany()
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_H_c_UserRoles_H_d_UserRoles");

                    b.HasOne("HotelApp2.Models.HUser", null)
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_H_c_UserRoles_H_Users");
                });

            modelBuilder.Entity("HotelApp2.Models.HAttendanceOperation", b =>
                {
                    b.HasOne("HotelApp2.Models.HStaff", "Staff")
                        .WithMany("HAttendanceOperations")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK__H_Attenda__IdSta__59FA5E80");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("HotelApp2.Models.HBooking", b =>
                {
                    b.HasOne("HotelApp2.Models.HGuestBooking", "Guest")
                        .WithMany("HBookings")
                        .HasForeignKey("GuestId")
                        .IsRequired()
                        .HasConstraintName("FK_H_Booking_H_Booking");

                    b.HasOne("HotelApp2.Models.HRoom", "Room")
                        .WithMany("HBookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__H_Booking__IdRoo__4AB81AF0");

                    b.HasOne("HotelApp2.Models.HDBookingStatus", "Status")
                        .WithMany("HBookings")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_H_Booking_H_d_BookingStatuses");

                    b.Navigation("Guest");

                    b.Navigation("Room");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("HotelApp2.Models.HCleaning", b =>
                {
                    b.HasOne("HotelApp2.Models.HRoom", "Room")
                        .WithMany("HCleanings")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK_H_Cleaning_H_Room");

                    b.HasOne("HotelApp2.Models.HUser", "User")
                        .WithMany("HCleanings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_H_Cleaning_H_UserHotel");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelApp2.Models.HFeedback", b =>
                {
                    b.HasOne("HotelApp2.Models.HDFeedbackStatus", "Status")
                        .WithMany("HFeedbacks")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_H_Feedback_H_Feedback");

                    b.HasOne("HotelApp2.Models.HUser", "User")
                        .WithMany("HFeedbacks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_H_Feedback_H_Users");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelApp2.Models.HFeedbackAnswer", b =>
                {
                    b.HasOne("HotelApp2.Models.HFeedback", "Feedback")
                        .WithMany("HFeedbackAnswers")
                        .HasForeignKey("FeedbackId")
                        .IsRequired()
                        .HasConstraintName("FK__H_Feedbac__IdFee__66603565");

                    b.HasOne("HotelApp2.Models.HUser", "User")
                        .WithMany("HFeedbackAnswers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__H_Feedbac__IdUse__6754599E");

                    b.Navigation("Feedback");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelApp2.Models.HGuestBooking", b =>
                {
                    b.HasOne("HotelApp2.Models.HDCountry", "Country")
                        .WithMany("HGuestBookings")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK_H_GuestBooking_H_d_Countries");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelApp2.Models.HGuestLiving", b =>
                {
                    b.HasOne("HotelApp2.Models.HDCountry", "Country")
                        .WithMany("HGuestLivings")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK_H_GuestLiving_H_d_Countries");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelApp2.Models.HHotel", b =>
                {
                    b.HasOne("HotelApp2.Models.HDCountry", "Country")
                        .WithMany("HHotels")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK_H_Hotel_H_d_Countries");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelApp2.Models.HLiving", b =>
                {
                    b.HasOne("HotelApp2.Models.HBooking", "Booking")
                        .WithMany("HLivings")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK_H_Living_H_Booking");

                    b.HasOne("HotelApp2.Models.HGuestLiving", "Guest")
                        .WithMany("HLivings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_H_Living_H_GuestLiving");

                    b.HasOne("HotelApp2.Models.HRoom", "Room")
                        .WithMany("HLivings")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK_H_Living_H_Room");

                    b.HasOne("HotelApp2.Models.HDLivingStatus", "Status")
                        .WithMany("HLivings")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_H_Living_H_d_LivingStatuses");

                    b.Navigation("Booking");

                    b.Navigation("Guest");

                    b.Navigation("Room");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("HotelApp2.Models.HPayment", b =>
                {
                    b.HasOne("HotelApp2.Models.HBooking", "Booking")
                        .WithMany("HPayments")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__H_Payment__IdBoo__6383C8BA");

                    b.HasOne("HotelApp2.Models.HDPaymentMethod", "Method")
                        .WithMany("HPayments")
                        .HasForeignKey("MethodId")
                        .IsRequired()
                        .HasConstraintName("FK__H_Payment__Payme__60A75C0F");

                    b.HasOne("HotelApp2.Models.HDPaymentStatus", "Status")
                        .WithMany("HPayments")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__H_Payment__Payme__619B8048");

                    b.Navigation("Booking");

                    b.Navigation("Method");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("HotelApp2.Models.HRoom", b =>
                {
                    b.HasOne("HotelApp2.Models.HDAvailabilityStatus", "AvailabilityStatus")
                        .WithMany("HRooms")
                        .HasForeignKey("AvailabilityStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelApp2.Models.HDCleaningStatus", "CleaningStatus")
                        .WithMany("HRooms")
                        .HasForeignKey("CleaningStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelApp2.Models.HDRoomType", null)
                        .WithMany("HRooms")
                        .HasForeignKey("HDRoomTypeId");

                    b.HasOne("HotelApp2.Models.HHotel", "Hotel")
                        .WithMany("HRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AvailabilityStatus");

                    b.Navigation("CleaningStatus");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelApp2.Models.HSalary", b =>
                {
                    b.HasOne("HotelApp2.Models.HStaff", "Staff")
                        .WithMany("HSalaries")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK_H_Salary_H_Staff");

                    b.HasOne("HotelApp2.Models.HDSalaryStatus", "Status")
                        .WithMany("HSalaries")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_H_Salary_H_d_SalaryStatuses");

                    b.Navigation("Staff");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("HotelApp2.Models.HStaff", b =>
                {
                    b.HasOne("HotelApp2.Models.HDCountry", "Country")
                        .WithMany("HStaffs")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK_H_Staff_H_d_Countries");

                    b.HasOne("HotelApp2.Models.HStaffFunction", "Function")
                        .WithMany("HStaffs")
                        .HasForeignKey("FunctionId")
                        .IsRequired()
                        .HasConstraintName("FK__H_Staff__IdFunct__3A81B327");

                    b.HasOne("HotelApp2.Models.HHotel", "Hotel")
                        .WithMany("HStaffs")
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("FK__H_Staff__IdHotel__3D5E1FD2");

                    b.Navigation("Country");

                    b.Navigation("Function");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelApp2.Models.HUser", b =>
                {
                    b.HasOne("HotelApp2.Models.HStaff", "Staff")
                        .WithMany("HUsers")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK_H_UserHotel_H_Staff");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("HotelApp2.Models.HUsersAction", b =>
                {
                    b.HasOne("HotelApp2.Models.HUser", "User")
                        .WithMany("HUsersActions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__H_ActionU__IdUse__571DF1D5");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelApp2.Models.HBooking", b =>
                {
                    b.Navigation("HLivings");

                    b.Navigation("HPayments");
                });

            modelBuilder.Entity("HotelApp2.Models.HDAvailabilityStatus", b =>
                {
                    b.Navigation("HRooms");
                });

            modelBuilder.Entity("HotelApp2.Models.HDBookingStatus", b =>
                {
                    b.Navigation("HBookings");
                });

            modelBuilder.Entity("HotelApp2.Models.HDCleaningStatus", b =>
                {
                    b.Navigation("HRooms");
                });

            modelBuilder.Entity("HotelApp2.Models.HDCountry", b =>
                {
                    b.Navigation("HGuestBookings");

                    b.Navigation("HGuestLivings");

                    b.Navigation("HHotels");

                    b.Navigation("HStaffs");
                });

            modelBuilder.Entity("HotelApp2.Models.HDFeedbackStatus", b =>
                {
                    b.Navigation("HFeedbacks");
                });

            modelBuilder.Entity("HotelApp2.Models.HDLivingStatus", b =>
                {
                    b.Navigation("HLivings");
                });

            modelBuilder.Entity("HotelApp2.Models.HDPaymentMethod", b =>
                {
                    b.Navigation("HPayments");
                });

            modelBuilder.Entity("HotelApp2.Models.HDPaymentStatus", b =>
                {
                    b.Navigation("HPayments");
                });

            modelBuilder.Entity("HotelApp2.Models.HDRoomType", b =>
                {
                    b.Navigation("HRooms");
                });

            modelBuilder.Entity("HotelApp2.Models.HDSalaryStatus", b =>
                {
                    b.Navigation("HSalaries");
                });

            modelBuilder.Entity("HotelApp2.Models.HFeedback", b =>
                {
                    b.Navigation("HFeedbackAnswers");
                });

            modelBuilder.Entity("HotelApp2.Models.HGuestBooking", b =>
                {
                    b.Navigation("HBookings");
                });

            modelBuilder.Entity("HotelApp2.Models.HGuestLiving", b =>
                {
                    b.Navigation("HLivings");
                });

            modelBuilder.Entity("HotelApp2.Models.HHotel", b =>
                {
                    b.Navigation("HRooms");

                    b.Navigation("HStaffs");
                });

            modelBuilder.Entity("HotelApp2.Models.HRoom", b =>
                {
                    b.Navigation("HBookings");

                    b.Navigation("HCleanings");

                    b.Navigation("HLivings");
                });

            modelBuilder.Entity("HotelApp2.Models.HStaff", b =>
                {
                    b.Navigation("HAttendanceOperations");

                    b.Navigation("HSalaries");

                    b.Navigation("HUsers");
                });

            modelBuilder.Entity("HotelApp2.Models.HStaffFunction", b =>
                {
                    b.Navigation("HStaffs");
                });

            modelBuilder.Entity("HotelApp2.Models.HUser", b =>
                {
                    b.Navigation("HCleanings");

                    b.Navigation("HFeedbackAnswers");

                    b.Navigation("HFeedbacks");

                    b.Navigation("HUsersActions");
                });
#pragma warning restore 612, 618
        }
    }
}
