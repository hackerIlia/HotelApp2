@page "/RoomType/Edit"
@page "/RoomType/Edit/{id:int}"
@using HotelApp2.Controllers
@using HModels;
@using Microsoft.EntityFrameworkCore
@using HotelApp2;
@inject NavigationManager NavigationManager
@inject HDRoomTypeC RoomTypeController
@rendermode InteractiveServer

<PageTitle>Edit</PageTitle>

<h3>Room Type</h3>
<h4>Edit</h4>

<h5>@((MarkupString)message)</h5>

@if(Id==null)
{
    <p><em>Not found</em></p>
}
else{
    <div class="row">
        <div class="col-md-3">
            <EditForm Model="HDRoomType" OnValidSubmit="UpdateType" FormName="Edit" asp-antiforgery="false" Enhance>
                <div class="mb-3">
                    <label class="form-label">Name</label>
                    <InputText class="form-control" type="text" @bind-Value="@name" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Capacity</label>
                    <InputNumber class="form-control" @bind-Value="@capacity" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Price</label>
                    <InputNumber class="form-control" @bind-Value="@price" />
                </div>

                <button type="submit" class="btn btn-primary">Edit</button>
                <a @onclick="Back" class="btn btn-info">Back to List</a>
            </EditForm>
        </div>
    </div>
    <div class="mb-3">
        <h4 class="text-success">@success</h4>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    public HDRoomType? HDRoomType { get; set; }


    public string name;
    public int capacity;
    public decimal price;

    string message = "";
    string success = "";



    protected override async Task OnInitializedAsync()
    {
        HDRoomType = RoomTypeController.GetById(Id);

        if (HDRoomType is null)
        {
            NavigationManager.NavigateTo("notfound");
        } 
        else
        {
            name = HDRoomType.Name;
            capacity =(int) HDRoomType.Capacity;
            price = HDRoomType.Price;
        }
    }

    public async Task UpdateType()
    {
        HDRoomType.Id = (byte)Id;
        HDRoomType.Capacity = (byte)capacity;
        HDRoomType.Price = price;
        HDRoomType.Name = name;

        message = await RoomTypeController.Edit(HDRoomType);
    }

    public void Back()
    {
        NavigationManager.NavigateTo("RoomType", true);
    }
}