@page "/FeedbackAnswer"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@using Microsoft.EntityFrameworkCore

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />

<PageTitle>Index</PageTitle>

<h1>Feedback Answer</h1>

<p>
    <a href="FeedbackAnswer/create" style="font-size:20px"><i class="fas fa-plus"> Create new</i></a>
</p>

@if (answers != null)
{
    <QuickGrid Class="table" Items="DB.HFeedbackAnswers">
        <PropertyColumn Property="hfeedbackanswer => hfeedbackanswer.Text" />
        <PropertyColumn Property="hfeedbackanswer => hfeedbackanswer.Date" />
        <PropertyColumn Property="hfeedbackanswer => hfeedbackanswer.Feedback.Text" Title="Feedback Text" />
        <PropertyColumn Property="hfeedbackanswer => hfeedbackanswer.User.FirstName + ' ' + hfeedbackanswer.User.LastName" Title="User Answered" />

        <TemplateColumn Context="hfeedbackanswer">
            <a href="@($"FeedbackAnswer/edit?id={hfeedbackanswer.Id}")"><i class="fas fa-edit"> Edit </i></a> |
            <a href="@($"FeedbackAnswer/delete?id={hfeedbackanswer.Id}")"><i class="fas fa-trash-alt"> Delete</i></a>
        </TemplateColumn>
    </QuickGrid>
}
else
{
    <p>No records found</p>
}

@code {
    List<HFeedbackAnswer> answers;

    protected override async Task OnInitializedAsync()
    {
        answers = await DB.HFeedbackAnswers.Include(a => a.Feedback)
                                            .Include(a => a.User)
                                            .ToListAsync();
    }
}