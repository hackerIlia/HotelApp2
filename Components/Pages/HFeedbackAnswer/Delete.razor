@page "/FeedbackAnswer/delete"
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Feedback Answer</h1>

<h4 class="text-danger"><b>Are you sure you want to delete this?</b></h4>
<hr />

<div>
    @if (hfeedbackanswer is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Text</dt>
            <dd class="col-sm-10">@hfeedbackanswer.Text</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Date Answered</dt>
            <dd class="col-sm-10">@hfeedbackanswer.Date</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Feedback Text</dt>
            <dd class="col-sm-10">@hfeedbackanswer.Feedback.Text</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">User Answered</dt>
            <dd class="col-sm-10">@hfeedbackanswer.User.FirstName @hfeedbackanswer.User.LastName</dd>
        </dl>
        <EditForm method="post" Model="hfeedbackanswer" OnValidSubmit="DeleteHFeedbackAnswer" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(hfeedbackanswer is null)">Delete</button> |
            <a href="/FeedbackAnswer">Cancel</a>
        </EditForm>
    }
</div>

@code {
    HFeedbackAnswer? hfeedbackanswer;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        hfeedbackanswer = await DB.HFeedbackAnswers.Include(a => a.Feedback)
                                                    .Include(a => a.User)
                                                    .FirstOrDefaultAsync(m => m.Id == Id);

        if (hfeedbackanswer is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteHFeedbackAnswer()
    {
        DB.HFeedbackAnswers.Remove(hfeedbackanswer!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/FeedbackAnswer");
    }
}
