@page "/Booking"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@using HModels
@using Microsoft.EntityFrameworkCore
@using HotelApp2.Controllers
@inject Booking BookingController
@inject Living LivingController


@attribute [Authorize(Roles = "Admin,Receptionist")]

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />

<PageTitle>Index</PageTitle>

<h1>Bookings</h1>

<p>
    <a href="Booking/create" style="font-size:20px"><i class="fas fa-plus"> Create new</i></a>
</p>

@if (bookings != null)
{
    <QuickGrid Class="table" Items="bookings">
        <PropertyColumn Property="hbooking => hbooking.Number" />
        <PropertyColumn Property="hbooking => hbooking.CheckInDate" Title="Check-in Date" Format="dd/MM/yyyy" />
        <PropertyColumn Property="hbooking => hbooking.CheckOutDate" Title="Check-out Date" Format="dd/MM/yyyy" />
        <PropertyColumn Property="hbooking => hbooking.Amount" />
        <PropertyColumn Property="hbooking => hbooking.Comments" />
        <PropertyColumn Property="hbooking => hbooking.Room.Number" Title="Room Number" />
        <PropertyColumn Property="hbooking => hbooking.Status.Name" Title="Status"  />
        <PropertyColumn Property="hbooking => hbooking.Guest.FirstName + ' ' + hbooking.Guest.LastName" Title="Guest" />

        <TemplateColumn Context="hbooking">
            @if (hbooking.Status.Name == "Paid" && !livings.Any(l => l.BookingId == hbooking.Id))
            {
                <span style="color:transparent"><i class="bi bi-credit-card" style="color: green;"><b> Pay | </b></i></span> 
                <a href="@($"Living/create/{hbooking.Id}")"><i class="fas fa-plus"> Check-in</i></a>
                <a href="@($"Booking/cancel?id={hbooking.Id}")"><b class="close">&times Cancel</b></a> //here we need to return money?
            }
            else if ((hbooking.Status.Name == "Paid" && livings.Any(l => l.BookingId == hbooking.Id)) || hbooking.StatusId > 2)
            {
                <span style="color:transparent"><i class="bi bi-credit-card" style="color: green;"> Pay | </i></span>
                <span style="color:transparent"><i class="fas fa-plus"> Check-in | </i></span>
                <span style="color:transparent"><i class="close">&times Cancel</i></span>
            }
            else
            {
                <a class="text-danger" href="@($"Booking/pay?id={hbooking.Id}")"><b class="bi bi-credit-card"> Pay | </b></a>
                <a href="@($"Living/create/{hbooking.Id}")"><i class="fas fa-plus"> Check-in</i></a>
                <a href="@($"Booking/cancel?id={hbooking.Id}")"><b class="close">&times Cancel</b></a>
            }
            |
            @if(hbooking.Status.Name=="Unpaid"){
                <a href="@($"Booking/edit?id={hbooking.Id}")"><i class="fas fa-edit"> Edit | </i></a>
                <a href="@($"Booking/delete?id={hbooking.Id}")"><i class="fas fa-trash-alt"> Delete</i></a>
            }
            else
            {
                <span style="color:transparent"><i class="fas fa-edit"> Edit | </i></span>
                <span style="color:transparent"><i class="fas fa-trash-alt"> Delete</i></span>

            }
        </TemplateColumn>
    </QuickGrid>
}
else
{
    <p>No records found</p>
}

@code {
    IQueryable<HModels.HBooking> bookings;

    IQueryable<HModels.HLiving> livings;

    protected override async Task OnInitializedAsync()
    {
        bookings = (await BookingController.Index()).AsQueryable();

        livings = (await LivingController.Index()).AsQueryable();
    }
}
