@page "/Booking"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@using Microsoft.EntityFrameworkCore

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />

<PageTitle>Index</PageTitle>

<h1>Bookings</h1>

<p>
    <a href="Booking/create" style="font-size:20px"><i class="fas fa-plus"> Create new</i></a>
</p>

@if (bookings != null)
{
    <QuickGrid Class="table" Items="DB.HBookings">
        <PropertyColumn Property="hbooking => hbooking.Number" />
        <PropertyColumn Property="hbooking => hbooking.CheckInDate" Title="Check-in Date" Format="dd/MM/yyyy" />
        <PropertyColumn Property="hbooking => hbooking.CheckOutDate" Title="Check-out Date" Format="dd/MM/yyyy" />
        <PropertyColumn Property="hbooking => hbooking.Amount" />
        <PropertyColumn Property="hbooking => hbooking.Comments" />
        <PropertyColumn Property="hbooking => hbooking.Room.Number" Title="Room Number" />
        <PropertyColumn Property="hbooking => hbooking.Status.Name" Title="Status"  />
        <PropertyColumn Property="hbooking => hbooking.Guest.FirstName + ' ' + hbooking.Guest.LastName" Title="Guest" />

        <TemplateColumn Context="hbooking">
            @if (hbooking.Status.Name == "Paid")
            {
                <span><i class="bi bi-credit-card" style="color: green;"><b> Pay | </b></i></span> 
                <a href="@($"Living/create/{hbooking.Id}")"><i class="fas fa-plus"> Check-in</i></a>
        }
            else
            {
                <a class="text-danger" href="@($"Booking/pay?id={hbooking.Id}")"><b class="bi bi-credit-card"> Pay | </b></a>
                <span><i class="fas fa-plus"> Check-in</i></span>
        }
            |
            <a href="@($"Booking/edit?id={hbooking.Id}")"><i class="fas fa-edit"> Edit </i></a> |
            <a href="@($"Booking/delete?id={hbooking.Id}")"><i class="fas fa-trash-alt"> Delete</i></a>
        </TemplateColumn>
    </QuickGrid>
}
else
{
    <p>No records found</p>
}

@code {
    List<HBooking> bookings;

    protected override async Task OnInitializedAsync()
    {
        bookings = await DB.HBookings.Include(b => b.HPayments)
                                        .Include(b => b.Room)
                                        .Include(b => b.Status)
                                        .Include(b => b.Guest)
                                        .ToListAsync();
    }
}
