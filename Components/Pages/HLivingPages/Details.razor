@page "/hlivings/details"
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>HLiving</h4>
    <hr />
    @if (hliving is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Number</dt>
            <dd class="col-sm-10">@hliving.Number</dd>
            <dt class="col-sm-2">CheckInDate</dt>
            <dd class="col-sm-10">@hliving.CheckInDate</dd>
            <dt class="col-sm-2">CheckOutDate</dt>
            <dd class="col-sm-10">@hliving.CheckOutDate</dd>
            <dt class="col-sm-2">Amount</dt>
            <dd class="col-sm-10">@hliving.Amount</dd>
            <dt class="col-sm-2">Comments</dt>
            <dd class="col-sm-10">@hliving.Comments</dd>
            <dt class="col-sm-2">RoomId</dt>
            <dd class="col-sm-10">@hliving.RoomId</dd>
            <dt class="col-sm-2">StatusId</dt>
            <dd class="col-sm-10">@hliving.StatusId</dd>
            <dt class="col-sm-2">BookingId</dt>
            <dd class="col-sm-10">@hliving.BookingId</dd>
            <dt class="col-sm-2">GuestId</dt>
            <dd class="col-sm-10">@hliving.GuestId</dd>
        </dl>
        <div>
            <a href="@($"/hlivings/edit?id={hliving.Id}")">Edit</a> |
            <a href="@($"/hlivings")">Back to List</a>
        </div>
    }
</div>

@code {
    HLiving? hliving;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        hliving = await DB.HLivings.FirstOrDefaultAsync(m => m.Id == Id);

        if (hliving is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
