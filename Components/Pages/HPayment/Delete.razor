@* @page "/hpayments/delete"
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>HPayment</h4>
    <hr />
    @if (hpayment is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">MethodId</dt>
            <dd class="col-sm-10">@hpayment.MethodId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">StatusId</dt>
            <dd class="col-sm-10">@hpayment.StatusId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Date</dt>
            <dd class="col-sm-10">@hpayment.Date</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Amount</dt>
            <dd class="col-sm-10">@hpayment.Amount</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BookingId</dt>
            <dd class="col-sm-10">@hpayment.BookingId</dd>
        </dl>
        <EditForm method="post" Model="hpayment" OnValidSubmit="DeleteHPayment" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(hpayment is null)">Delete</button> |
            <a href="/hpayments">Back to List</a>
        </EditForm>
    }
</div>

@code {
    HPayment? hpayment;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        hpayment = await DB.HPayments.FirstOrDefaultAsync(m => m.Id == Id);

        if (hpayment is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteHPayment()
    {
        DB.HPayments.Remove(hpayment!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/hpayments");
    }
}
 *@