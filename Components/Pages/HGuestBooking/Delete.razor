@page "/GuestBooking/delete"
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer

@attribute [Authorize(Roles = "Admin,Receptionist")]

<PageTitle>Delete</PageTitle>

<h1>Guest - Booking</h1>

<h4 class="text-danger"><b>Are you sure you want to delete this?</b></h4>
<hr />

<h5 class="text-danger">@message</h5>

<div>
    @if (hguestbooking is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">FirstName</dt>
            <dd class="col-sm-10">@hguestbooking.FirstName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastName</dt>
            <dd class="col-sm-10">@hguestbooking.LastName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PassportNumber</dt>
            <dd class="col-sm-10">@hguestbooking.PassportNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@hguestbooking.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Phone</dt>
            <dd class="col-sm-10">@hguestbooking.Phone</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Country</dt>
            <dd class="col-sm-10">@hguestbooking.Country.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">City</dt>
            <dd class="col-sm-10">@hguestbooking.City</dd>
        </dl>
        <EditForm method="post" Model="hguestbooking" OnValidSubmit="DeleteHGuestBooking" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(hguestbooking is null)">Delete</button>
            <a href="/GuestBooking" class="btn btn-info">Cancel</a>
        </EditForm>
    }
</div>

@code {
    HGuestBooking? hguestbooking;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        hguestbooking = await DB.HGuestBookings.Include(g => g.Country).FirstOrDefaultAsync(m => m.Id == Id);

        if (hguestbooking is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteHGuestBooking()
    {
        message = "";

        if (hguestbooking!.HBookings.Count != 0)
        {
            message = "This guest has related bookings. You can't delete it";
            return;
        }

        DB.HGuestBookings.Remove(hguestbooking!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/GuestBooking");
    }
}
