@page "/Feedback/delete"
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Feedback</h1>

<h4 class="text-danger"><b>Are you sure you want to delete this?</b></h4>
<hr />

<h5 class="text-danger">@message</h5>

<div>
    @if (hfeedback is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Text</dt>
            <dd class="col-sm-10">@hfeedback.Text</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Date</dt>
            <dd class="col-sm-10">@hfeedback.Date</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@hfeedback.Status.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Rate</dt>
            <dd class="col-sm-10">@hfeedback.Rate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">User Created</dt>
            <dd class="col-sm-10">@hfeedback.User.FirstName @hfeedback.User.LastName</dd>
        </dl>
        <EditForm method="post" Model="hfeedback" OnValidSubmit="DeleteHFeedback" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(hfeedback is null)">Delete</button> |
            <a href="/Feedback">Cancel</a>
        </EditForm>
    }
</div>

@code {
    HFeedback? hfeedback;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        hfeedback = await DB.HFeedbacks.Include(f => f.Status)
                                        .Include(f => f.User)
                                        .FirstOrDefaultAsync(m => m.Id == Id);

        if (hfeedback is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteHFeedback()
    {
        message = "";

        if (hfeedback!.HFeedbackAnswers.Count != 0)
        {
            message = "This feedback has related answers. You can't delete it";
            return;
        }

        DB.HFeedbacks.Remove(hfeedback!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/Feedback");
    }
}
