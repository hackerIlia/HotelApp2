@page "/hguestlivings/details"
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>HGuestLiving</h4>
    <hr />
    @if (hguestliving is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">FirstName</dt>
            <dd class="col-sm-10">@hguestliving.FirstName</dd>
            <dt class="col-sm-2">LastName</dt>
            <dd class="col-sm-10">@hguestliving.LastName</dd>
            <dt class="col-sm-2">PassportNumber</dt>
            <dd class="col-sm-10">@hguestliving.PassportNumber</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@hguestliving.Email</dd>
            <dt class="col-sm-2">Phone</dt>
            <dd class="col-sm-10">@hguestliving.Phone</dd>
            <dt class="col-sm-2">CountryId</dt>
            <dd class="col-sm-10">@hguestliving.CountryId</dd>
            <dt class="col-sm-2">City</dt>
            <dd class="col-sm-10">@hguestliving.City</dd>
        </dl>
        <div>
            <a href="@($"/hguestlivings/edit?id={hguestliving.Id}")">Edit</a> |
            <a href="@($"/hguestlivings")">Back to List</a>
        </div>
    }
</div>

@code {
    HGuestLiving? hguestliving;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        hguestliving = await DB.HGuestLivings.FirstOrDefaultAsync(m => m.Id == Id);

        if (hguestliving is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
