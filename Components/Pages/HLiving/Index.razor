@page "/Living"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer

@attribute [Authorize(Roles = "Admin,Receptionist")]

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />

<PageTitle>Index</PageTitle>

<h1>Livings</h1>

<p>
    <a href="Living/create" style="font-size:20px"><i class="fas fa-plus"> Create new</i></a>
</p>

<h5 class="text-info">@message</h5>

@if (livings != null)
{
    <QuickGrid Class="table" Items="DB.HLivings">
        <PropertyColumn Property="hliving => hliving.Number" />
        <PropertyColumn Property="hliving => hliving.CheckInDate" Title="Check-in Date" Format="dd/MM/yyyy" />
        <PropertyColumn Property="hliving => hliving.CheckOutDate" Title="Check-out Date" Format="dd/MM/yyyy" />
        <PropertyColumn Property="hliving => hliving.Amount" />
        <PropertyColumn Property="hliving => hliving.Comments" />
        <PropertyColumn Property="hliving => hliving.Room.Number" Title="Room Number" />
        <PropertyColumn Property="hliving => hliving.Status.Name" Title="Status" />
        @* <PropertyColumn Property="hliving => hliving.Booking.Number" Title="Booking Number" /> *@
        <PropertyColumn Property="hliving => hliving.Guest.FirstName + ' ' + hliving.Guest.LastName" Title="Guest" />

        <TemplateColumn Context="hliving">
            @if(hliving.Status.Name == "Checked out")
            {
                <span style="color:transparent"><i class="bi bi-clipboard-check"> Check-out | </i></span>
            }
            else
            {
                <a href="@($"Living/checkOut?id={hliving.Id}")"><i class="bi bi-clipboard-check"> Check-out | </i></a>
            }
            <button class="btn btn-link" @onclick="@(() => ShowCleanModal(hliving.Id))"><i class="bi bi-stars">Cleaning |</i></button>
            <a href="@($"Living/edit?id={hliving.Id}")"><i class="fas fa-edit"> Edit </i></a> |
            <a href="@($"Living/delete?id={hliving.Id}")"><i class="fas fa-trash-alt"> Delete</i></a> 
        </TemplateColumn>
    </QuickGrid>

    @if (show)
    {
        <div class="modal" tabindex="-1" role="dialog" style="display:block">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirmation</h5>
                        <button type="button" class="btn-close" @onclick=HideModal></button>
                    </div>
                    <div class="modal-body">
                        <h5 class="text-danger">Are you sure you want to order a room cleaning?</h5>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick=HideModal>No</button>
                        <button type="button" class="btn btn-primary" @onclick=OrderCleaning>Yes</button>
                    </div>
                </div>
            </div>
        </div>
    }
}
else
{
    <p>No records found</p>
}

@code {
    List<HLiving> livings;
    private bool show = false;
    private int selectedLivingId;
    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        livings = await DB.HLivings.Include(l => l.Room)
                                        .Include(l => l.Status)
                                        .Include(l => l.Guest)
                                        .Include(l => l.Booking)
                                        .ToListAsync();
    }

    private void ShowCleanModal(int livingId)
    {
        selectedLivingId = livingId;
        show = true;
    }

    private void HideModal()
    {
        show = false;
    }

    private async Task OrderCleaning()
    {
        message = "";

        HLiving living = await DB.HLivings.FirstOrDefaultAsync(l => l.Id == selectedLivingId);
        HRoom room = await DB.HRooms.FirstOrDefaultAsync(r => r.Id == living.RoomId);
        room.CleaningStatusId = (byte)3;

        await DB.SaveChangesAsync();
        message = "Cleaning ordered successfully for room number: " + room.Number;
        show = false;
    }
}
