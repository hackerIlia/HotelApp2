@page "/Living/delete"
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h4 class="text-danger"><b>Are you sure you want to delete this?</b></h4>
<hr />

<div>
    <h4>HLiving</h4>
    <hr />
    @if (hliving is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Number</dt>
            <dd class="col-sm-10">@hliving.Number</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Check-in Date</dt>
            <dd class="col-sm-10">@hliving.CheckInDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Check-out Date</dt>
            <dd class="col-sm-10">@hliving.CheckOutDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Amount</dt>
            <dd class="col-sm-10">@hliving.Amount</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Comments</dt>
            <dd class="col-sm-10">@hliving.Comments</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Room</dt>
            <dd class="col-sm-10">@hliving.Room.Number</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@hliving.Status.Name</dd>
        </dl>
@*         <dl class="row">
            <dt class="col-sm-2">Booking Number</dt>
            <dd class="col-sm-10">@hliving.Booking.Number</dd>
        </dl> *@
        <dl class="row">
            <dt class="col-sm-2">Guest</dt>
            <dd class="col-sm-10">@hliving.Guest.FirstName @hliving.Guest.LastName</dd>
        </dl>
        <EditForm method="post" Model="hliving" OnValidSubmit="DeleteHLiving" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(hliving is null)">Delete</button> |
            <a href="/Living">Back to List</a>
        </EditForm>
    }
</div>

@code {
    HLiving? hliving;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        hliving = await DB.HLivings.Include(b => b.Guest)
                                     .Include(b => b.Status)
                                     .Include(b => b.Room)
                                     .Include(b => b.Booking)
                                    .FirstOrDefaultAsync(m => m.Id == Id);

        if (hliving is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteHLiving()
    {
        HRoom room = await DB.HRooms.FirstOrDefaultAsync(r => r.Id == hliving.RoomId);
        room.AvailabilityStatusId = (byte)1;

        DB.HLivings.Remove(hliving!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/Living");
    }
}
