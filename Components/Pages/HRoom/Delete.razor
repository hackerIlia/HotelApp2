@page "/Room/Delete"
@page "/Room/Delete/{id:int}"
@inject HotelApp2.Models.Hotel_DBContext DB
@using HotelApp2.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer

<PageTitle>Delete</PageTitle>

<h1>Room</h1>

<h4 class="text-danger"><b>Are you sure you want to delete this?</b></h4>
<hr />

<div>
    @if (hroom is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Number</dt>
            <dd class="col-sm-10">@hroom.Number</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Availability Status</dt>
            <dd class="col-sm-10">@hroom.AvailabilityStatus.StatusName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Cleaning Status</dt>
            <dd class="col-sm-10">@hroom.CleaningStatus.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Room type</dt>
            <dd class="col-sm-10">@hroom.Type.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Hotel</dt>
            <dd class="col-sm-10">@hroom.Hotel.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Floor</dt>
            <dd class="col-sm-10">@hroom.Etaj</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Nr. Rooms</dt>
            <dd class="col-sm-10">@hroom.NrRooms</dd>
        </dl>
        <EditForm method="post" Model="hroom" OnValidSubmit="DeleteHRoom" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(hroom is null)">Delete</button> 
            <a href="Room" class="btn btn-info">Cancel</a>
        </EditForm>
    }
</div>

@code {
    HRoom? hroom;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        hroom = await DB.HRooms.Include(r => r.CleaningStatus)
                                .Include(r => r.AvailabilityStatus)
                                .Include(r => r.Hotel)
                                .Include(r => r.Type)
                                .FirstOrDefaultAsync(m => m.Id == Id);

        if (hroom is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteHRoom()
    {
        DB.HRooms.Remove(hroom!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/Room");
    }
}
