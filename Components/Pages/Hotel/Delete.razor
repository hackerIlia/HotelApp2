@page "/Hotel/Delete"
@page "/Hotel/Delete/{id:int}"
@using HotelApp2.Models;
@inject Models.Hotel_DBContext dbContext
@using Microsoft.EntityFrameworkCore
@using HotelApp2;
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Delete</PageTitle>

<h3>Hotel</h3>

<h4 class="text-danger"><b>Are you sure you want to delete this?</b></h4>


@if (hotel is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <dl class="row">
        <dt class="col-sm-2">Name</dt>
        <dd class="col-sm-10">@hotel.Name</dd>
    </dl>
    <dl class="row">
        <dt class="col-sm-2">Phone</dt>
        <dd class="col-sm-10">@hotel.Phone</dd>
    </dl>
    <dl class="row">
        <dt class="col-sm-2">Email</dt>
        <dd class="col-sm-10">@hotel.Email</dd>
    </dl>
    <dl class="row">
        <dt class="col-sm-2">Country</dt>
        <dd class="col-sm-10">@hotel.Country.Name</dd>
    </dl>
    <dl class="row">
        <dt class="col-sm-2">City</dt>
        <dd class="col-sm-10">@hotel.City</dd>
    </dl>
    <dl class="row">
        <dt class="col-sm-2">Address</dt>
        <dd class="col-sm-10">@hotel.Address</dd>
    </dl>
    <EditForm method="post" Model="hotel" OnValidSubmit="DeleteHotel" FormName="delete" Enhance>
        <button type="submit" class="btn btn-danger" disabled="@(hotel is null)">Delete</button>
        <a href="Hotel" class="btn btn-info">Cancel</a>
    </EditForm>
}

@code {
    Models.HHotel? hotel;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        hotel = await dbContext.HHotels.Include(h => h.Country).FirstOrDefaultAsync(h => h.Id == Id);

        if (hotel is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteHotel()
    {
        dbContext.HHotels.Remove(hotel!);
        await dbContext.SaveChangesAsync();
        NavigationManager.NavigateTo("/Hotel");
    }
}